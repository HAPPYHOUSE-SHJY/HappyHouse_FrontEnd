{"remainingRequest":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/src/components/notice/SelectNoticeByNo.vue?vue&type=style&index=0&id=0bac06ba&scoped=true&lang=css&","dependencies":[{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/src/components/notice/SelectNoticeByNo.vue","mtime":1621856946334},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQojdGV4dCB7DQogIHRleHQtYWxpZ246IGxlZnQ7DQp9DQojY2FyZCB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCn0NCiNzdWJ0aXRsZSB7DQogIGZsb2F0OiByaWdodDsNCn0NCmJ1dHRvbiB7DQogIG1hcmdpbi1sZWZ0OiAzMHB4Ow0KfQ0KdGFibGUsDQp0ciwNCnRkIHsNCiAgYm9yZGVyOiAxcHggc29saWQ7DQogIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCg0KdGFibGUgew0KICB3aWR0aDogNTAlOw0KICBoZWlnaHQ6IDIwMHB4Ow0KICBtYXJnaW46IGF1dG87DQp9DQojdGV4dCB7DQogIHBhZGRpbmc6IDIwcHg7DQp9DQo="},{"version":3,"sources":["SelectNoticeByNo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SelectNoticeByNo.vue","sourceRoot":"src/components/notice","sourcesContent":["<template>\r\n  <div style=\"min-height: 400px\">\r\n    <h2>공지사항 상세보기</h2>\r\n    <br />\r\n    <v-btn\r\n      class=\"mx-2\"\r\n      width=\"40px\"\r\n      height=\"40px\"\r\n      fab\r\n      dark\r\n      color=\"teal\"\r\n      @click=\"moveList\"\r\n      style=\"float: right\"\r\n    >\r\n      <v-icon dark>mdi-format-list-bulleted-square</v-icon>\r\n    </v-btn>\r\n    <v-btn\r\n      v-if=\"getIsAdmin == 1\"\r\n      class=\"mx-2\"\r\n      fab\r\n      color=\"primary\"\r\n      width=\"40px\"\r\n      height=\"40px\"\r\n      @click=\"moveInsert\"\r\n      style=\"float: right\"\r\n    >\r\n      <v-icon dark> mdi-pencil </v-icon>\r\n    </v-btn>\r\n    <br /><br />\r\n    <card class=\"mt-3\" id=\"card\">\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>글번호</td>\r\n            <td id=\"text\" v-html=\"article.no\"></td>\r\n          </tr>\r\n          <tr>\r\n            <td>제목</td>\r\n            <td id=\"text\" v-html=\"article.title\"></td>\r\n          </tr>\r\n          <tr>\r\n            <td>내용</td>\r\n            <td id=\"text\" v-html=\"article.content\"></td>\r\n          </tr>\r\n          <tr>\r\n            <td>작성시간</td>\r\n            <td id=\"text\" v-html=\"article.regtime\"></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </card>\r\n    <br />\r\n\r\n    <v-btn\r\n      v-if=\"getIsAdmin == 1\"\r\n      tile\r\n      color=\"success\"\r\n      style=\"left: 45%\"\r\n      @click=\"updateNotice(article.no)\"\r\n    >\r\n      <v-icon left> mdi-pencil </v-icon>\r\n      수정하기\r\n    </v-btn>\r\n\r\n    <br /><br />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nimport http from \"@/util/http-common\";\r\n//import axios from 'axios';\r\n//const SERVER_URL = process.env.VUE_APP_SERVER_URL;\r\n\r\nexport default {\r\n  name: \"SelectNoticeByNo\",\r\n  props: [\"no\"],\r\n  data() {\r\n    return {\r\n      upHere: false,\r\n      article: {},\r\n      user: \"\",\r\n      comments: [],\r\n      loading: true,\r\n      errored: false,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\"getAccessToken\", \"getUserId\", \"getUserName\", \"getIsAdmin\"]),\r\n  },\r\n  methods: {\r\n    updateNotice(did) {\r\n      this.$router.push(\"/updatenotice/\" + did);\r\n    },\r\n    moveList() {\r\n      this.$router.push(\"/notice\");\r\n    },\r\n    moveInsert() {\r\n      this.$router.push(\"/insertnotice\");\r\n    },\r\n  },\r\n  mounted() {\r\n    http\r\n      .get(\"/notice/\" + this.no)\r\n      .then((response) => (this.article = response.data))\r\n      .catch(() => {\r\n        this.errored = true;\r\n      })\r\n      .finally(() => (this.loading = false));\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#text {\r\n  text-align: left;\r\n}\r\n#card {\r\n  position: relative;\r\n}\r\n#subtitle {\r\n  float: right;\r\n}\r\nbutton {\r\n  margin-left: 30px;\r\n}\r\ntable,\r\ntr,\r\ntd {\r\n  border: 1px solid;\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n}\r\n\r\ntable {\r\n  width: 50%;\r\n  height: 200px;\r\n  margin: auto;\r\n}\r\n#text {\r\n  padding: 20px;\r\n}\r\n</style>\r\n"]}]}