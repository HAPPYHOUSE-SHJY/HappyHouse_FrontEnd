{"remainingRequest":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/src/views/Register.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/src/views/Register.vue","mtime":1621841478820},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5yZWdpc3Rlci1mb3JtIHsNCiAgbWF4LXdpZHRoOiA1MDBweDsNCiAgbWFyZ2luOiAwIGF1dG87DQp9DQouc2lnbnVwLWJ0biB7DQogIGZsb2F0OiByaWdodDsNCn0NCg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+MA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-container>\r\n    <h2>회원가입</h2>\r\n    <v-form class=\"register-form\" ref=\"form\">\r\n      <v-col cols=\"12\" sm=\"12\">\r\n        <v-text-field\r\n          v-model=\"id\"\r\n          :counter=\"14\"\r\n          :rules=\"idRules\"\r\n          label=\"ID\"\r\n          required\r\n          ref=\"id\"\r\n        ></v-text-field>\r\n      </v-col>\r\n      <v-col cols=\"12\" sm=\"12\">\r\n        <v-text-field\r\n          v-model=\"name\"\r\n          :counter=\"10\"\r\n          :rules=\"nameRules\"\r\n          label=\"Name\"\r\n          required\r\n          ref=\"name\"\r\n        ></v-text-field>\r\n      </v-col>\r\n\r\n      <v-col cols=\"12\" sm=\"12\">\r\n        <v-text-field\r\n          v-model=\"password\"\r\n          :append-icon=\"show ? 'mdi-eye' : 'mdi-eye-off'\"\r\n          :rules=\"[passwordRules.required, passwordRules.min]\"\r\n          :type=\"show ? 'text' : 'password'\"\r\n          name=\"input-10-1\"\r\n          label=\"Password\"\r\n          hint=\"At least 8 characters\"\r\n          counter\r\n          @click:append=\"show = !show\"\r\n          ref=\"password\"\r\n        ></v-text-field>\r\n      </v-col>\r\n      <v-col cols=\"12\" sm=\"12\">\r\n        <v-text-field\r\n          block\r\n          v-model=\"verify\"\r\n          :append-icon=\"verifyShow ? 'mdi-eye' : 'mdi-eye-off'\"\r\n          :rules=\"[passwordRules.required, passwordMatch]\"\r\n          :type=\"verifyShow ? 'text' : 'password'\"\r\n          name=\"input-10-1\"\r\n          label=\"Confirm Password\"\r\n          counter\r\n          @click:append=\"verifyShow = !verifyShow\"\r\n          ref=\"verify\"\r\n        ></v-text-field>\r\n      </v-col>\r\n      <v-col cols=\"12\" sm=\"12\">\r\n        <v-text-field v-model=\"email\" :rules=\"emailRules\" label=\"E-mail\" required></v-text-field>\r\n      </v-col>\r\n      <v-col cols=\"12\" sm=\"12\">\r\n        <v-text-field\r\n          v-model=\"address\"\r\n          :rules=\"addressRules\"\r\n          label=\"Address\"\r\n          required\r\n          readonly\r\n        ></v-text-field>\r\n        <v-btn color=\"primary\" class=\"mr-4\" @click=\"searchAddress\"> 우편번호 검색 </v-btn>\r\n      </v-col>\r\n      <div class=\"signup-btn\">\r\n        <v-btn color=\"primary\" class=\"mr-4\" @click=\"check\"> 회원가입 </v-btn>\r\n        <v-btn color=\"error\" class=\"mr-4\" @click=\"reset\"> 초기화 </v-btn>\r\n      </div>\r\n    </v-form>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport http from \"@/util/http-common\";\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      valid: true,\r\n      id: \"\",\r\n      idRules: [\r\n        (v) => !!v || \"ID is required\",\r\n        (v) => (v && v.length <= 10) || \"ID must be less than 10 characters\",\r\n      ],\r\n      name: \"\",\r\n      nameRules: [\r\n        (v) => !!v || \"Name is required\",\r\n        (v) => (v && v.length <= 10) || \"Name must be less than 10 characters\",\r\n      ],\r\n      email: \"\",\r\n      emailRules: [\r\n        (v) => !!v || \"E-mail is required\",\r\n        (v) => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\r\n      ],\r\n      show: false,\r\n      verifyShow: false,\r\n      password: \"\",\r\n      passwordRules: {\r\n        required: (value) => !!value || \"Required.\",\r\n        min: (v) => v.length >= 8 || \"Min 8 characters\",\r\n      },\r\n      verify: \"\",\r\n      address: \"\",\r\n      subaddress: \"\",\r\n      addressRules: [(v) => !!v || \"Address is required\"],\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    validate() {\r\n      this.$refs.form.validate();\r\n    },\r\n    reset() {\r\n      this.$refs.form.reset();\r\n    },\r\n    check() {\r\n      let err = true;\r\n      let msg = \"\";\r\n      !this.id && ((msg = \"아이디를 입력해주세요\"), (err = false), this.$refs.id.focus());\r\n      err && !this.name && ((msg = \"이름을 입력해주세요\"), (err = false), this.$refs.name.focus());\r\n      err &&\r\n        !this.password &&\r\n        ((msg = \"비밀번호를 입력해주세요\"), (err = false), this.$refs.password.focus());\r\n      err &&\r\n        !this.verify &&\r\n        ((msg = \"비밀번호를 입력해주세요\"), (err = false), this.$refs.verify.focus());\r\n      err &&\r\n        !this.email &&\r\n        ((msg = \"이메일을 입력해주세요\"), (err = false), this.$refs.email.focus());\r\n      err && !this.address && ((msg = \"주소를 선택해주세요\"), (err = false), this.searchAddress());\r\n\r\n      if (!err) alert(msg);\r\n      else this.register();\r\n    },\r\n    register: function () {\r\n      http\r\n        .post(\"/user\", {\r\n          userid: this.id,\r\n          username: this.name,\r\n          userpwd: this.password,\r\n          address: this.address,\r\n          email: this.email,\r\n        })\r\n        .then(({ data }) => {\r\n          if (data == \"success\") {\r\n            alert(\"회원 가입이 완료 되었습니다. 로그인 후 이용해주세요\");\r\n            this.moveList();\r\n          } else {\r\n            alert(\"회원가입 처리를 하지 못했습니다.\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          alert(\"서버에 오류가 생겼습니다 ㅈㅅ\");\r\n        });\r\n    },\r\n    moveList() {\r\n      this.$router.push(\"/login\");\r\n    },\r\n    searchAddress() {\r\n      console.log(\"메서드 시작 : \" + this.address);\r\n      new window.daum.Postcode({\r\n        oncomplete: (data) => {\r\n          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n          // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n          // 내려오는 변수가 값이 없는 경우엔 공백(”)값을 가지므로, 이를 참고하여 분기 한다.\r\n          let fullAddr = \"\"; // 최종 주소 변수\r\n          let extraAddr = \"\"; // 조합형 주소 변수\r\n          // 사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n          if (data.userSelectedType === \"R\") {\r\n            // 사용자가 도로명 주소를 선택했을 경우\r\n            fullAddr = data.roadAddress;\r\n          } else {\r\n            // 사용자가 지번 주소를 선택했을 경우(J)\r\n            fullAddr = data.jibunAddress;\r\n          }\r\n          // 사용자가 선택한 주소가 도로명 타입일때 조합한다.\r\n          if (data.userSelectedType === \"R\") {\r\n            //법정동명이 있을 경우 추가한다.\r\n            if (data.bname !== \"\") {\r\n              extraAddr += data.bname;\r\n            }\r\n            // 건물명이 있을 경우 추가한다.\r\n            if (data.buildingName !== \"\") {\r\n              extraAddr += extraAddr !== \"\" ? \", \" + data.buildingName : data.buildingName;\r\n            }\r\n            // 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.\r\n            fullAddr += extraAddr !== \"\" ? \" (\" + extraAddr + \")\" : \"\";\r\n          }\r\n          // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n\r\n          console.log(this.address + \" / \" + fullAddr);\r\n          this.address = fullAddr;\r\n          console.log(this.address + \" / \" + fullAddr);\r\n        },\r\n      }).open();\r\n    },\r\n  },\r\n  computed: {\r\n    passwordMatch() {\r\n      return () => this.password === this.verify || \"Password must match\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.register-form {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n.signup-btn {\r\n  float: right;\r\n}\r\n</style>\r\n"]}]}