{"remainingRequest":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/src/components/comment/CommentListItem.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/src/components/comment/CommentListItem.vue","mtime":1622056556248},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1vdXNlLW92ZXItYmdjb2xvciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2UwZWVlZTsKICBmb250LXNpemU6IDEzcHQ7Cn0KdGV4dGFyZWEgewogIHJlc2l6ZTogbm9uZTsKICBwYWRkaW5nOiA1cHg7CiAgYm9yZGVyOiAxcHggc29saWQgIzk0OTQ5NDsKICBib3JkZXItcmFkaXVzOiAxMHB4Owp9Cg=="},{"version":3,"sources":["CommentListItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CommentListItem.vue","sourceRoot":"src/components/comment","sourcesContent":["<template>\n  <div :class=\"{ 'mouse-over-bgcolor': isColor }\">\n    <v-form v-if=\"isModify\" style=\"width: 800px; margin: 0 auto\">\n      <!--수정 가능 모드 -->\n      <v-container>\n        <v-row>\n          <v-col>\n            <!-- 댓글 수정 입력창 -->\n            <textarea\n              style=\"resize: none; width: 500px; margin-left: 0%\"\n              id=\"content\"\n              ref=\"content\"\n              v-model=\"content\"\n              value=\"commentObj.content\"\n              placeholder=\"댓글을 작성해주세요.\"\n            ></textarea>\n          </v-col>\n          <v-col style=\"width: 30px; margin-left: 20px\">\n            <!-- 댓글 수정 확인버튼 -->\n            <v-btn color=\"blue\" dark @click=\"check\"> 완료 </v-btn>\n            <!-- 댓글 수정 취소버튼 -->\n            <v-btn color=\"red\" dark @click=\"change\">취소</v-btn>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-form>\n\n    <div v-else>\n      <!--수정 불가능 모드 -->\n      <template>\n        <v-form style=\"width: 800px; margin: 0 auto\">\n          <v-container>\n            <v-row>\n              <v-col>\n                <v-text-field\n                  style=\"width: 500px\"\n                  v-model=\"commentObj.content\"\n                  single-line\n                  solo\n                  readonly\n                ></v-text-field>\n              </v-col>\n              <v-col v-if=\"getIsAdmin == 1\" style=\"width: 30px; margin-left: 20px\">\n                <v-btn color=\"blue\" dark @click=\"change\"> 수정 </v-btn>\n                <v-btn color=\"red\" dark @click=\"deleteComment(commentObj.no)\">삭제</v-btn>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-form>\n      </template>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport http from \"@/util/http-common\";\nexport default {\n  name: \"CommentListItem\",\n  props: [\"commentObj\", \"reloadComment\"],\n  data() {\n    return {\n      isColor: false,\n      isModify: false,\n      content: \"\",\n    };\n  },\n  computed: {\n    ...mapGetters([\"getAccessToken\", \"getUserId\", \"getUserName\", \"getIsAdmin\"]),\n  },\n  methods: {\n    bgColorChange: function (flag) {\n      this.isColor = flag;\n    },\n    change() {\n      this.isModify = !this.isModify;\n      if (this.isModify) this.content = this.commentObj.content;\n    },\n\n    check() {\n      let err = true;\n      let msg = \"\";\n      !this.content && ((msg = \"내용을 입력해주세요!\"), (err = false), this.$refs.content.focus());\n\n      if (!err) alert(msg);\n      else this.updateComment();\n    },\n\n    updateComment: function () {\n      http\n        .put(\"/comment/\" + this.commentObj.no, { content: this.content, no: this.commentObj.no })\n        .then(() => {\n          this.isModify = !this.isModify;\n          this.reloadComment();\n        });\n    },\n    deleteComment() {\n      http.delete(\"/comment/\" + this.commentObj.no).then(() => {\n        this.reloadComment();\n      });\n    },\n  },\n};\n</script>\n<style>\n.mouse-over-bgcolor {\n  background-color: #e0eeee;\n  font-size: 13pt;\n}\ntextarea {\n  resize: none;\n  padding: 5px;\n  border: 1px solid #949494;\n  border-radius: 10px;\n}\n</style>\n"]}]}