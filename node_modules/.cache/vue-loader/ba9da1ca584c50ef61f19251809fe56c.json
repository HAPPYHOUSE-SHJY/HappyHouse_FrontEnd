{"remainingRequest":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/src/views/Modify.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/src/views/Modify.vue","mtime":1621844141959},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yoon/SSAFY/vuejs/Project/happyhouse_final/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubW9kaWZ5LWZvcm0gew0KICBtYXgtd2lkdGg6IDcwMHB4Ow0KICBtYXJnaW46IDAgYXV0bzsNCn0NCi5tb2RpZnktYnRuIHsNCiAgZmxvYXQ6IHJpZ2h0Ow0KfQ0K"},{"version":3,"sources":["Modify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Modify.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-form class=\"modify-form\" ref=\"form\">\r\n      <v-col cols=\"12\" sm=\"10\">\r\n        <v-text-field\r\n          v-model=\"user.userid\"\r\n          :counter=\"14\"\r\n          :rules=\"idRules\"\r\n          label=\"ID\"\r\n          required\r\n          readonly\r\n        ></v-text-field>\r\n      </v-col>\r\n      <v-col cols=\"12\" sm=\"10\">\r\n        <v-text-field\r\n          v-model=\"user.username\"\r\n          :counter=\"10\"\r\n          :rules=\"nameRules\"\r\n          label=\"Name\"\r\n          required\r\n          readonly\r\n        ></v-text-field>\r\n      </v-col>\r\n\r\n      <v-col cols=\"12\" sm=\"10\">\r\n        <v-text-field\r\n          v-model=\"user.email\"\r\n          :rules=\"emailRules\"\r\n          label=\"E-mail\"\r\n          ref=\"email\"\r\n          required\r\n        ></v-text-field>\r\n      </v-col>\r\n      <v-col cols=\"12\" sm=\"12\">\r\n        <v-text-field\r\n          v-model=\"user.address\"\r\n          :rules=\"addressRules\"\r\n          label=\"Address\"\r\n          required\r\n          readonly\r\n        >\r\n        </v-text-field>\r\n        <v-btn color=\"primary\" class=\"mr-4\" @click=\"searchAddress\"> 우편번호 검색 </v-btn>\r\n      </v-col>\r\n\r\n      <div class=\"modify-btn\">\r\n        <v-btn color=\"primary\" class=\"mr-4\" @click.prevent=\"check\"> 수정완료 </v-btn>\r\n        <v-btn color=\"error\" @click=\"moveMain\" class=\"mr-4\"> 취소</v-btn>\r\n      </div>\r\n    </v-form>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport http from \"@/util/http-common\";\r\nconst SERVER_URL = process.env.VUE_APP_SERVER_URL;\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: null,\r\n    };\r\n  },\r\n\r\n  created() {\r\n    axios.defaults.headers.common[\"auth-token\"] = this.$store.state.accessToken;\r\n    axios\r\n      .get(`${SERVER_URL}/user/info`)\r\n      .then((response) => {\r\n        this.user = response.data;\r\n      })\r\n      .catch(() => {\r\n        this.$store.dispatch(\"LOGOUT\").then(() => this.$router.replace(\"/\"));\r\n      });\r\n  },\r\n  methods: {\r\n    check() {\r\n      let err = true;\r\n      let msg = \"\";\r\n      !this.user.email &&\r\n        ((msg = \"이메일을 입력해주세요\"), (err = false), this.$refs.email.focus());\r\n      err &&\r\n        !this.user.address &&\r\n        ((msg = \"주소를 선택해주세요\"), (err = false), this.searchAddress());\r\n\r\n      if (!err) alert(msg);\r\n      else this.modify();\r\n    },\r\n    modify: function () {\r\n      console.log(\"수정 ㄱㄱ\");\r\n      http\r\n        .put(\"/user\", {\r\n          userid: this.user.userid,\r\n          username: this.user.username,\r\n          address: this.user.address,\r\n          email: this.user.email,\r\n        })\r\n        .then(({ data }) => {\r\n          if (data == \"success\") {\r\n            alert(\"회원 정보 수정이 완료 되었습니다\");\r\n            this.$router.push(\"/mypage\");\r\n          } else {\r\n            alert(\"회원 정보 수정을 처리 하지 못했습니다.\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          alert(\"서버에 오류가 생겼습니다 ㅈㅅ\");\r\n        });\r\n    },\r\n    searchAddress() {\r\n      new window.daum.Postcode({\r\n        oncomplete: (data) => {\r\n          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n          // 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n          // 내려오는 변수가 값이 없는 경우엔 공백(”)값을 가지므로, 이를 참고하여 분기 한다.\r\n          let fullAddr = \"\"; // 최종 주소 변수\r\n          let extraAddr = \"\"; // 조합형 주소 변수\r\n          // 사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n          if (data.userSelectedType === \"R\") {\r\n            // 사용자가 도로명 주소를 선택했을 경우\r\n            fullAddr = data.roadAddress;\r\n          } else {\r\n            // 사용자가 지번 주소를 선택했을 경우(J)\r\n            fullAddr = data.jibunAddress;\r\n          }\r\n          // 사용자가 선택한 주소가 도로명 타입일때 조합한다.\r\n          if (data.userSelectedType === \"R\") {\r\n            //법정동명이 있을 경우 추가한다.\r\n            if (data.bname !== \"\") {\r\n              extraAddr += data.bname;\r\n            }\r\n            // 건물명이 있을 경우 추가한다.\r\n            if (data.buildingName !== \"\") {\r\n              extraAddr += extraAddr !== \"\" ? \", \" + data.buildingName : data.buildingName;\r\n            }\r\n            // 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.\r\n            fullAddr += extraAddr !== \"\" ? \" (\" + extraAddr + \")\" : \"\";\r\n          }\r\n          // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n\r\n          this.user.address = fullAddr;\r\n        },\r\n      }).open();\r\n    },\r\n\r\n    moveMain() {\r\n      this.$router.push(\"/\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.modify-form {\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n}\r\n.modify-btn {\r\n  float: right;\r\n}\r\n</style>\r\n"]}]}